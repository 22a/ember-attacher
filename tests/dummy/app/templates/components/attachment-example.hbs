<centered class="section">
  <p>Drop an \{{#ember-attacher}} in any element or component to get started.</p>
</centered>
<centered class="section">
  <centered xs="12" lm="10" sm="8" md="6" lg="5" justify="around" class="popper-area">
    <button class="hover-me">
      Tooltip me, captain!
      {{#ember-attacher animation=tooltipData.animation
                        arrow=tooltipData.arrow
                        hideDelay=tooltipData.hideDelay
                        hideDuration=tooltipData.hideDuration
                        hideOn=tooltipData.hideOn
                        interactive=tooltipData.interactive
                        placement=tooltipData.placement
                        renderInPlace=tooltipData.renderInPlace
                        showDelay=tooltipData.showDelay
                        showDuration=tooltipData.showDuration
                        showOn=tooltipData.showOn
                        popperClass="popper tooltip"}}
        Hello world!
      {{/ember-attacher}}
    </button>

    <button class="hover-me target-plz">
      Click me, captain!
    </button>

    {{#ember-attacher animation=popoverData.animation
                      arrow=popoverData.arrow
                      hideDelay=popoverData.hideDelay
                      hideDuration=popoverData.hideDuration
                      hideOn=popoverData.hideOn
                      interactive=popoverData.interactive
                      placement=popoverData.placement
                      renderInPlace=popoverData.renderInPlace
                      showDelay=popoverData.showDelay
                      showDuration=popoverData.showDuration
                      showOn=popoverData.showOn
                      target=popoverData.target
                      popperClass=
                        "popper custom-popover-css"}}
      Popovers and tooltips, oh my!
    {{/ember-attacher}}
  </centered>
</centered>
{{#if (and service.arrow (eq service.animation "fill"))}}
  <centered class="section">
    <h2>Warning: `animation: "fill"` is not compatible with `arrow: true`</h2>
  </centered>
{{/if}}
<centered class="edit-section">
  <vbox lm="fit">
    <hbox class="nav-bar">
      <centered fit class="nav{{if isConfiguringTooltip ' active'}}" {{action 'setIsConfiguringTooltip' true}}>
        In a parent
      </centered>
      <centered fit class="nav{{unless isConfiguringTooltip ' active'}}" {{action 'setIsConfiguringTooltip' false}}>
        With a target
      </centered>
    </hbox>

  <vbox class="edit-me">
    <hbox><centered fit>&lt;button class="hover-me"></centered></hbox>
    <hbox><centered fit>&nbsp;&nbsp;{{if isConfiguringTooltip 'Tooltip me, captain!' 'Popover me, captain!'}}</centered></hbox>
    <box lm="horizontal" fit>
      <hbox fit class="no-wrap">
        <centered fit>&nbsp;&nbsp;\{{#ember-attacher&nbsp;</centered>
      </hbox>
      <hbox fit>
        <box xs="fit" lm="hidden">&nbsp;&nbsp;&nbsp;&nbsp;</box>
        <centered fit>
          animation="{{#power-select onchange=(action (mut service.animation))
                                     options=animationOptions
                                     searchEnabled=false
                                     selected=service.animation
                                     triggerClass="button large"
                                     as |animationOption|}}
                                       {{animationOption}}
                                     {{/power-select}}"
        </centered>
      </hbox>
    </box>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        arrow=<div class="button medium" {{action "toggleArrow"}}>{{service.arrow}}</div>
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        hideDelay={{input class="button medium"
                          min="0"
                          pattern="[0-9]"
                          placeholder="0"
                          step="100"
                          type="number"
                          value=service.hideDelay}}
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        hideOn="{{#power-select onchange=(action (mut service.hideOn))
                                options=hideOnOptions
                                searchEnabled=false
                                selected=service.hideOn
                                triggerClass="button xlarge"
                                as |hideOnOption|}}
                                  {{hideOnOption}}
                                {{/power-select}}"
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        hideDuration={{input class="button medium"
                             min="0"
                             pattern="[0-9]"
                             placeholder="0"
                             step="100"
                             type="number"
                             value=service.hideDuration}}
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        interactive=<div class="button medium" {{action "toggleInteractive"}}>{{service.interactive}}</div>
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        placement="{{#power-select onchange=(action (mut service.placement))
                                   options=placementOptions
                                   searchEnabled=false
                                   selected=service.placement
                                   triggerClass="button medium"
                                   as |placementOption|}}
                                     {{placementOption}}
                                   {{/power-select}}"
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        showDelay={{input class="button medium"
                          min="0"
                          pattern="[0-9]"
                          placeholder="0"
                          step="100"
                          type="number"
                          value=service.showDelay}}
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        showDuration={{input class="button medium"
                             min="0"
                             pattern="[0-9]"
                             placeholder="0"
                             step="100"
                             type="number"
                             value=service.showDuration}}
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        showOn="{{#power-select onchange=(action (mut service.showOn))
                                options=showOnOptions
                                searchEnabled=false
                                selected=service.showOn
                                triggerClass="button xlarge"
                                as |showOnOption|}}
                                  {{showOnOption}}
                                {{/power-select}}"
      </centered>
    </hbox>
    {{#unless isConfiguringTooltip}}
      <hbox>
        &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
        <centered fit>
          target=".target-plz"
        </centered>
      </hbox>
    {{/unless}}
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        {{#if isConfiguringTooltip}}
          popperClass="popper tooltip"}}
        {{else}}
          <vbox>
            <hbox><centered fit>popperClass=</centered></hbox>
            <hbox><centered fit>&nbsp;&nbsp;"popper custom-popover-css"}}</centered></hbox>
          </vbox>
        {{/if}}
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;...
    </hbox>
    <hbox>
      &nbsp;&nbsp;\{{/ember-attacher}}
    </hbox>
    <hbox>
      <centered fit>&lt;\button></centered>
    </hbox>
  </vbox>
  </vbox>
</centered>
<vbox align="center" class="section">
  <h2>Credits</h2>
  <vbox fit xs="12" lm="10" sm="8" md="6">
    <p>Ember-attacher was inspired by tippy.js and ember-tooltips.</p>
    <p>It was built with love to provide a tooltip and popover addon based on popper.js, a modern replacement to tether.js, while taking advantage of everything Ember.js has to offer.</p>
  </vbox>
</vbox>
